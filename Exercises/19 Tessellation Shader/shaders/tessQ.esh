#version 400
 
layout (quads) in;
out vec3 colorToFS;
in vec4 patchPositionToTES[];
in vec3 patchColorToTES[];

uniform mat4 projectionMatrix, viewMatrix, modelMatrix;

void main1() {
	float u  = gl_TessCoord.x, u1 = 1 - gl_TessCoord.x;
	float v  = gl_TessCoord.y, v1 = 1 - gl_TessCoord.y;
	vec4 p0 = u1 * v1 * patchPositionToTES[0];
	vec4 p1 = u  * v1 * patchPositionToTES[1];
	vec4 p2 = u  * v  * patchPositionToTES[2];
	vec4 p3 = u1 * v  * patchPositionToTES[3];
	vec4 middlePosition = p0 + p1 + p2 + p3;
	gl_Position = projectionMatrix * viewMatrix * modelMatrix * middlePosition;
	
	vec3 c0 = u1 * v1 * patchColorToTES[0];
	vec3 c1 = u  * v1 * patchColorToTES[1];
	vec3 c2 = u  * v  * patchColorToTES[2];
	vec3 c3 = u1 * v  * patchColorToTES[3];
	vec3 middleColor = c0 + c1 + c2 + c3;
	colorToFS = middleColor;
	
  	//colorToFS = vec3(gl_TessCoord.x, gl_TessCoord.y, 0);
}

void main() {
	gl_Position = vec4((2 * gl_TessCoord.x) - 1, (2 * gl_TessCoord.y) - 1, 0, 1);
	//gl_Position = vec4(gl_TessCoord.x, gl_TessCoord.y, 0, 1);
	colorToFS = vec3(gl_TessCoord);
}
